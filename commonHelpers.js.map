{"version":3,"file":"commonHelpers.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from \"axios\";\n\n\n// Функція для виконання HTTP-запиту до сервісу Pixabay\nexport async function fetchImages(query) {\n    const apiKey = \"39588460-df52399cf23d63ffd2a80219a\";\n    // URL для HTTP-запиту з використанням вказаних параметрів\n    const url = `https://pixabay.com/api/?key=${apiKey}&q=${query}&image_type=photo&orientation=horizontal&safesearch=true`;\n    // Виконуємо HTTP-запит та повертаємо обіцянку\n    try {\n    // Отримання відповіді з сервера\n        const response = await axios.get(url);\n    // Перевірка чи є результати запиту\n        if (!response.data.hits || response.data.hits.length === 0) {\n            return [];\n        }\n\n        return response.data.hits;\n    } catch (error) {\n        console.error(\"Error fetching images:\", error);\n        return [];\n    }\n};\n    \n    \n    \n    \n    \n    \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n//   return fetch(url)\n//     .then(response => {\n//       if (!response.ok) {\n//         // Обробляємо випадок невдалого HTTP-запиту\n//         throw new Error(\"Failed to fetch images\");\n//       }\n//       // Повертаємо відповідь у форматі JSON\n//       return response.json();\n//     })\n//     .then(data => {\n//       if (data.hits.length === 0) {\n//         // Якщо немає результатів, повертаємо порожній масив\n//         return [];\n//       }\n//       // Повертаємо масив зображень\n//       return data.hits;\n//     })\n//     .catch(error => {\n//       // Обробляємо помилки\n//       console.error(\"Error fetching images:\", error);\n//       // Повертаємо порожній масив в разі помилки\n//       return [];\n//     });\n// };\n\n  \n\n\n","\n\nexport function renderImages(images) {\n    const gallery = document.querySelector(\".gallery\");\n // Генеруємо розмітку для кожного елемента галереї\n    gallery.insertAdjacentHTML(\"beforeend\", galleryItemsMarkup(images));\n    \n function galleryItemsMarkup(arr) {\n    return arr\n        .map(({ webformatURL, largeImageURL, tags, likes, views, comments, downloads }) => `\n     <li class=\"gallery-item\">\n     <a class=\"gallery-link\" href=\"${largeImageURL}\">\n      <img class=\"gallery-image\"\n      src=\"${webformatURL}\"\n      alt=\"${tags}\"\n      loading=\"lazy\"\n      />\n     </a>\n     <ul class=\"image-details\">\n       <li class=\"activities\"><span class=\"details\">Likes</span> ${likes}</li>\n       <li class=\"activities\"><span class=\"details\">Views</span> ${views}</li>\n       <li class=\"activities\"><span class=\"details\">Comments</span> ${comments}</li>\n       <li class=\"activities\"><span class=\"details\">Downloads</span> ${downloads}</li>\n     </ul>\n     </li>`)\n        .join('');\n    };\n    \n    // Викликаємо функцію galleryItemsMarkup і передаємо їй зображення для генерації розмітки\n    gallery.innerHTML = galleryItemsMarkup(images);\n};\n\n\n\n\n\n\n\n","\n\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\nimport SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\n\nimport { fetchImages } from \"./js/pixabay-api\";\nimport { renderImages } from \"./js/render-functions\"\n\n   // Підключаємо бібліотеку і вказуємо затримку підпису зображення з атрибуту alt\n    const lightbox = new SimpleLightbox('.gallery a', { captionDelay: 250,\n    captionsData: 'alt', \n    });\n   \n \n   // Отримуємо посилання на форму за ідентифікатором\n   const searchForm = document.getElementById(\"search-form\");\n   // Отримуємо посилання на індикатор\n   const loader = document.querySelector(\".loader\"); \n\n   // Додаємо обробник події \"submit\" до форми\nsearchForm.addEventListener(\"submit\", onFormSubmit);\n   \n\n\nfunction onFormSubmit(event) {\n       event.preventDefault();\n       // Показуємо індикатор завантаження\n       showLoader();\n       //Очищуємо галерею\n       clearGallery();\n       // Отримуємо значення текстового поля пошуку\n       const searchInput = document.getElementById(\"search-input\");\n       // Видаляємо зайві пробіли з початку та кінця рядка\n       const query = searchInput.value.trim();\n       // Перевіряємо, чи не є поле пошуку порожнім\n       if (query !== \"\") {\n       // Виконуємо HTTP-запит за допомогою функції fetchImages\n       fetchImages(query)\n         .then(images => {\n           //Очищуємо поле інпуту\n           searchInput.value = \"\";\n           if (images.length === 0) {\n             // Виводимо повідомлення про відсутність зображень\n             iziToast.info({\n               title: \"Information\",\n               message: \"Sorry, there are no images matching your search query. Please try again!\",\n               position: \"topRight\",\n               backgroundColor: \"red\",\n               maxWidth: \"500px\"\n             });\n           } else {\n             renderImages(images);\n             // Оновлюємо галерею після додавання нових елементів\n             lightbox.refresh();\n           }         \n          })\n         .catch(error => {\n           console.error(\"Error fetching images:\", error);\n          })\n         .finally(() => {\n           // Приховуємо індикатор завантаження\n           hideLoader();\n          });\n  }\n};\n\n\nfunction showLoader() {\n   // Показуємо індикатор\n  loader.style.display = \"block\";\n};\n\nfunction hideLoader() {\n  // Приховуємо індикатор завантаження\n  loader.style.display = \"none\";\n};\n\n function clearGallery() {\n    const gallery = document.querySelector(\".gallery\");\n    gallery.innerHTML = \"\";\n};\n\n\n\n"],"names":["fetchImages","query","url","response","axios","error","renderImages","images","gallery","galleryItemsMarkup","arr","webformatURL","largeImageURL","tags","likes","views","comments","downloads","lightbox","SimpleLightbox","searchForm","loader","onFormSubmit","event","showLoader","clearGallery","searchInput","iziToast","hideLoader"],"mappings":"owBAIO,eAAeA,EAAYC,EAAO,CAGrC,MAAMC,EAAM,qEAA4CD,CAAK,2DAE7D,GAAI,CAEA,MAAME,EAAW,MAAMC,EAAM,IAAIF,CAAG,EAEpC,MAAI,CAACC,EAAS,KAAK,MAAQA,EAAS,KAAK,KAAK,SAAW,EAC9C,GAGJA,EAAS,KAAK,IACxB,OAAQE,EAAO,CACZ,eAAQ,MAAM,yBAA0BA,CAAK,EACtC,EACV,CACL,CCpBO,SAASC,EAAaC,EAAQ,CACjC,MAAMC,EAAU,SAAS,cAAc,UAAU,EAEjDA,EAAQ,mBAAmB,YAAaC,EAAmBF,CAAM,CAAC,EAErE,SAASE,EAAmBC,EAAK,CAC9B,OAAOA,EACF,IAAI,CAAC,CAAE,aAAAC,EAAc,cAAAC,EAAe,KAAAC,EAAM,MAAAC,EAAO,MAAAC,EAAO,SAAAC,EAAU,UAAAC,CAAS,IAAO;AAAA;AAAA,qCAEtDL,CAAa;AAAA;AAAA,aAErCD,CAAY;AAAA,aACZE,CAAI;AAAA;AAAA;AAAA;AAAA;AAAA,mEAKkDC,CAAK;AAAA,mEACLC,CAAK;AAAA,sEACFC,CAAQ;AAAA,uEACPC,CAAS;AAAA;AAAA,WAErE,EACF,KAAK,EAAE,CAEhB,CAEIT,EAAQ,UAAYC,EAAmBF,CAAM,CACjD,CCnBI,MAAMW,EAAW,IAAIC,EAAe,aAAc,CAAE,aAAc,IAClE,aAAc,KAClB,CAAK,EAIIC,EAAa,SAAS,eAAe,aAAa,EAElDC,EAAS,SAAS,cAAc,SAAS,EAGlDD,EAAW,iBAAiB,SAAUE,CAAY,EAIlD,SAASA,EAAaC,EAAO,CACtBA,EAAM,eAAc,EAEpBC,IAEAC,IAEA,MAAMC,EAAc,SAAS,eAAe,cAAc,EAEpDzB,EAAQyB,EAAY,MAAM,KAAI,EAEhCzB,IAAU,IAEdD,EAAYC,CAAK,EACd,KAAKM,GAAU,CAEdmB,EAAY,MAAQ,GAChBnB,EAAO,SAAW,EAEpBoB,EAAS,KAAK,CACZ,MAAO,cACP,QAAS,2EACT,SAAU,WACV,gBAAiB,MACjB,SAAU,OACzB,CAAc,GAEDrB,EAAaC,CAAM,EAEnBW,EAAS,QAAO,EAE7B,CAAW,EACD,MAAMb,GAAS,CACd,QAAQ,MAAM,yBAA0BA,CAAK,CACxD,CAAW,EACD,QAAQ,IAAM,CAEbuB,GACX,CAAW,CAEX,CAGA,SAASJ,GAAa,CAEpBH,EAAO,MAAM,QAAU,OACzB,CAEA,SAASO,GAAa,CAEpBP,EAAO,MAAM,QAAU,MACzB,CAEC,SAASI,GAAe,CACrB,MAAMjB,EAAU,SAAS,cAAc,UAAU,EACjDA,EAAQ,UAAY,EACxB"}